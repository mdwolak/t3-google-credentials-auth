// Further reading:
// https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
// https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "."
}

generator client {
  provider = "prisma-client-js"
}

// Necessary for Next auth
model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  //t3 attributes
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  //extensions
  password      String?
  role          UserRole  @default(User)
  provider      String?

  createdDate DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // identityProviderId   String?
  // GroupMember   GroupMember[]
  // Event         Event[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum UserRole {
  User
  Admin
}

model Exemplar {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  content   String
  category  String
  published Boolean @default(false)

  createdAt   DateTime @default(now())
  createdById Int
  updatedAt   DateTime @updatedAt
  updatedById Int

  //@@unique([content, category])
}
